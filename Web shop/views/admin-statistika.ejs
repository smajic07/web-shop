<!DOCTYPE html>
<html lang="bs">
  <head>

    <title>Statistika</title>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css"> <!--bootstrap ikonice-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script><!-- ajax -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> <!-- chart.js -->

    <link rel='stylesheet' href='/stylesheets/style-admin-statistika.css' />

  </head>
  <body onload="setujVarijable('<%=ratio[0].broj%>', '<%=ratio[1].broj%>', '<%=status[0].broj%>', '<%=status[1].broj%>',
          '<%=status[2].broj%>', '<%=status[3].broj%>', '<%= JSON.stringify(artCat) %>', '<%= JSON.stringify(popArt) %>',
          '<%= JSON.stringify(ordStatus) %>')">


  <header id="heder">
    <!-- Navigacijski menu uzet s linka: https://getbootstrap.com/docs/5.1/components/navbar/ -->
    <nav class="navbar navbar-expand-sm navbar-dark" style="background-color: black;">
      <div class="container">
        <a class="navbar-brand" href="/admin/statistika" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Osvježi stranicu"><i class="bi bi-trophy-fill"></i></a>
        <span id="tekstPoredSlikeNava">Statistika</span>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarText">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="elementMenija" class="nav-item">
              <a class="navLink nav-link" href="/admin">Korisnici</a>
            </li>
            <li class="elementMenija" class="nav-item">
              <a class="navLink nav-link" href="/admin/kategorije">Kategorije</a>
            </li>
            <li class="elementMenija" class="nav-item">
              <a class="navLink nav-link" href="/poruke/poruke">Čat</a>
            </li>
            <li class="elementMenija" class="nav-item">
              <a class="navLink nav-link" href="/logout">Odjava</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  </header>

  <div class="container-fluid">
    <div class="row justify-content-around">
      <div class="kolona col-10 col-md-5">
        <h4>Artikli po kategorijama</h4>
        <canvas id="myChart3"></canvas>
      </div>
      <div class="kolona col-10 col-md-5">
        <h4>Najprodavaniji artikli</h4>
        <canvas id="myChart4"></canvas>
      </div>
      <div class="kolona col-6 col-md-4">
        <h4>Broj korisnika</h4>
        <canvas id="myChart1"></canvas>
      </div>
      <div class="kolona col-10 col-md-7">
        <h4>Korisnici po statusima</h4>
        <canvas id="myChart2"></canvas>
      </div>
      <div class="kolona col-10 col-md-7">
        <h4>Narudžbe po statusima</h4>
        <canvas id="myChart5"></canvas>
      </div>
    </div>
  </div>

  <script>
    function setujVarijable(brojProdavaca, brojKupaca, normalni, blokirani15, blokirani, arhivirani, artCat, popArt, ordStatus) {
      artCat = JSON.parse(artCat);
      popArt = JSON.parse(popArt);
      ordStatus = JSON.parse(ordStatus);
      console.log(ordStatus);
      var ctx = document.getElementById('myChart1');
      const myChart = new Chart(ctx, {
        type: 'pie',
        data: {
          labels: ['Kupci', 'Prodavači'],
          datasets: [{
            data: [brojKupaca, brojProdavaca],
            backgroundColor: [
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")"
            ],
            borderColor: [
              'white'
            ],
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
      ctx = document.getElementById('myChart2');
      const myChart2 = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: ['Broj aktivnih', 'Broj blokiranih 15 dana', 'Broj blokiranih', 'Broj arhiviranih'],
          datasets: [{
            data: [normalni, blokirani15, blokirani, arhivirani],
            backgroundColor: [
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")"
            ],
            borderColor: [
              'white'
            ],
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
      ctx = document.getElementById('myChart3');
      const myChart3 = new Chart(ctx, {
        type: 'doughnut',
        data: {
          labels: [artCat[0].category_name, artCat[1].category_name, artCat[2].category_name, artCat[3].category_name,
                   artCat[4].category_name, artCat[5].category_name, artCat[6].category_name],
          datasets: [{
            data: [artCat[0].broj, artCat[1].broj, artCat[2].broj, artCat[3].broj,
              artCat[4].broj, artCat[5].broj, artCat[6].broj],
            backgroundColor: [
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")"
            ],
            borderColor: [
                'white'
            ],
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
      ctx = document.getElementById('myChart4');
      const myChart4 = new Chart(ctx, {
        type: 'polarArea',
        data: {
          labels: [popArt[0].article_name, popArt[1].article_name, popArt[2].article_name, popArt[3].article_name,
                   popArt[4].article_name, popArt[5].article_name],
          datasets: [{
            data: [popArt[0].broj, popArt[1].broj, popArt[2].broj, popArt[3].broj,
              popArt[4].broj, popArt[5].broj],
            backgroundColor: [
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")"
            ],
            borderColor: [
              'white'
            ],
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
      var statusi = [];
      var imena = [];
      for(let i=0; i<ordStatus.length; i++){
        statusi.push(ordStatus[i].broj);
        imena.push(ordStatus[i].status);
      }
      ctx = document.getElementById('myChart5');
      const myChart5 = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: imena,
          datasets: [{
            data: statusi,
            backgroundColor: [
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")",
              "rgba(" + Math.random()*255 + ", " + Math.random()*255 + ", " + Math.random()*255 + ")"
            ],
            borderColor: [
              'white'
            ],
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }
  </script>

  <!-- javascript kod, potreban za tooltip -->
  <script type="text/javascript">
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
      return new bootstrap.Tooltip(tooltipTriggerEl)
    })
  </script>

  </body>
</html>